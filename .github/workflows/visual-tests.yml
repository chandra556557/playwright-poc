name: Visual Regression Tests

# Trigger the workflow on push to main/master and pull requests
on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  # Allow manual triggering
  workflow_dispatch:

# Set environment variables
env:
  NODE_VERSION: '18'
  PERCY_PARALLEL_TOTAL: 2

jobs:
  visual-tests:
    name: Percy Visual Tests
    runs-on: ubuntu-latest
    
    # Set timeout for the entire job
    timeout-minutes: 30
    
    strategy:
      matrix:
        # Run tests in parallel for faster execution
        shard: [1, 2]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for Percy to compare against base branch
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          # Install Playwright browsers
          npx playwright install --with-deps chromium
      
      - name: Build application
        run: npm run build
      
      - name: Start development server
        run: |
          npm run dev &
          # Wait for server to be ready
          npx wait-on http://localhost:5173 --timeout 60000
        env:
          CI: true
      
      - name: Run visual regression tests
        run: npm run test:visual
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          PERCY_PARALLEL_TOTAL: ${{ env.PERCY_PARALLEL_TOTAL }}
          PERCY_PARALLEL_NONCE: ${{ github.run_id }}-${{ github.run_attempt }}
          PERCY_BRANCH: ${{ github.head_ref || github.ref_name }}
          PERCY_TARGET_BRANCH: ${{ github.base_ref || 'main' }}
          PERCY_BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          APP_BASE_URL: http://localhost:5173
          CI: true
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-visual-${{ matrix.shard }}
          path: playwright-report-visual/
          retention-days: 7
      
      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-visual-${{ matrix.shard }}
          path: allure-results-visual/
          retention-days: 7
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-visual-${{ matrix.shard }}
          path: test-results/
          retention-days: 7

  # Job to finalize Percy build after all shards complete
  percy-finalize:
    name: Finalize Percy Build
    runs-on: ubuntu-latest
    needs: visual-tests
    if: always() && contains(needs.visual-tests.result, 'success')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install Percy CLI
        run: npm install -g @percy/cli
      
      - name: Finalize Percy build
        run: percy build:finalize
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          PERCY_PARALLEL_NONCE: ${{ github.run_id }}-${{ github.run_attempt }}

  # Job to generate combined Allure report
  allure-report:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    needs: visual-tests
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all Allure results
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results-visual-*
          path: allure-results-combined/
          merge-multiple: true
      
      - name: Generate Allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results-combined
          allure_report: allure-report-visual
          gh_pages: gh-pages-visual
          allure_history: allure-history-visual
      
      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-history-visual
          destination_dir: visual-tests

  # Job to comment on PR with Percy results
  percy-comment:
    name: Comment Percy Results
    runs-on: ubuntu-latest
    needs: [visual-tests, percy-finalize]
    if: github.event_name == 'pull_request' && always()
    
    steps:
      - name: Comment PR with Percy results
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('Percy Visual Tests')
            );
            
            const body = `## üé≠ Percy Visual Tests
            
            Visual regression tests have been completed for this PR.
            
            **Status:** ${{ needs.visual-tests.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}
            
            ### Results
            - **Branch:** \`${{ github.head_ref }}\`
            - **Base:** \`${{ github.base_ref }}\`
            - **Build:** [View in Percy Dashboard](https://percy.io)
            - **Playwright Report:** Check the artifacts section
            
            ### What's Next?
            1. Review any visual changes in the Percy dashboard
            2. Approve changes if they are intentional
            3. Investigate and fix any unintended visual regressions
            
            ---
            *This comment is automatically updated on each push.*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

# Additional workflow for nightly visual tests (optional)
---
name: Nightly Visual Tests

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  comprehensive-visual-tests:
    name: Comprehensive Visual Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        viewport: [desktop, tablet, mobile]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps
      
      - name: Start development server
        run: |
          npm run dev &
          npx wait-on http://localhost:5173 --timeout 60000
      
      - name: Run comprehensive visual tests
        run: |
          npx playwright test --config=playwright.visual.config.js \
            --project=visual-${{ matrix.browser }} \
            --grep="${{ matrix.viewport }}"
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          PERCY_BRANCH: nightly-${{ matrix.browser }}-${{ matrix.viewport }}
          PERCY_TARGET_BRANCH: main
      
      - name: Upload results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: nightly-results-${{ matrix.browser }}-${{ matrix.viewport }}
          path: |
            playwright-report-visual/
            test-results/
          retention-days: 30